# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2016, Juan Linietsky, Ariel Manzur and the Godot
# community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-08-22 23:27+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh\n"
"Language-Team: GoDogeCN\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../reference/compiling_for_windows.rst:4
msgid "Compiling for Windows"
msgstr ""

#: ../../reference/compiling_for_windows.rst:9
msgid "Requirements"
msgstr ""

#: ../../reference/compiling_for_windows.rst:11
msgid "For compiling under Windows, the following is required:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:13
msgid ""
"Visual C++, `Visual Studio Community <https://www.visualstudio.com/en-"
"us/products/visual-studio-community-vs.aspx>`__ (recommended), at least "
"the 2013 version (12.0) up to 2015 (14.0). **Make sure you read "
"Installing Visual Studio caveats bellow or you will have to run/download "
"the installer again.**"
msgstr ""

#: ../../reference/compiling_for_windows.rst:18
msgid ""
"`Python 2.7+ <https://www.python.org/downloads/>`__ (3.0 is untested as "
"of now). Using the 32-bits installer is recommended."
msgstr ""

#: ../../reference/compiling_for_windows.rst:20
msgid ""
"`Pywin32 Python Extension "
"<https://sourceforge.net/projects/pywin32/files/pywin32/>`__ for parallel"
" builds (which increase the build speed by a great factor)."
msgstr ""

#: ../../reference/compiling_for_windows.rst:22
msgid "`SCons <http://www.scons.org>`__ build system."
msgstr ""

#: ../../reference/compiling_for_windows.rst:25
msgid "Setting up SCons"
msgstr ""

#: ../../reference/compiling_for_windows.rst:27
msgid ""
"Python adds the interpreter (python.exe) to the path. It usually installs"
" in ``C:\\Python`` (or ``C:\\Python[Version]``). SCons installs inside "
"the Python install and provides a batch file called \"scons.bat\". The "
"location of this file can be added to the path or it can simply be copied"
" to ``C:\\Python`` together with the interpreter executable."
msgstr ""

#: ../../reference/compiling_for_windows.rst:33
msgid ""
"To check whether you have installed Python and SCons correctly, you can "
"type ``python --version`` and ``scons --version`` into the standard "
"Windows Command Prompt (cmd.exe)."
msgstr ""

#: ../../reference/compiling_for_windows.rst:37
msgid ""
"If commands above do not work, make sure you add Python to your PATH "
"environment variable after installing it, and check again."
msgstr ""

#: ../../reference/compiling_for_windows.rst:41
msgid "Setting up Pywin32"
msgstr ""

#: ../../reference/compiling_for_windows.rst:43
msgid ""
"Pywin32 is required for -j (parallel) builds for multiple cores (for a 32"
" bit Python version). If SCons is issuing a warning about Pywin32 after "
"parsing SConstruct build instructions, when begining to build, you need "
"to install it properly from the correct installer executable for your "
"python version `located at Sourceforge. "
"<https://sourceforge.net/projects/pywin32/files/pywin32/>`__"
msgstr ""

#: ../../reference/compiling_for_windows.rst:49
msgid ""
"For example, if you installed Python 2.7 32 bit version, you would want "
"to install the latest version of Pywin32 (as of writting Build 220) that "
"is built for the mentioned version of Python... That executable installer"
" would be named \"pywin32-220.win32-py2.7.exe\"."
msgstr ""

#: ../../reference/compiling_for_windows.rst:54
msgid ""
"Amd64 version of Pywin32 is for a 64 bit version of Python \"pywin32-220"
".win-amd64-py2.7.exe\". Change the \"py\" number to install for your "
"version of python (check via ``python --version`` mentioned above)."
msgstr ""

#: ../../reference/compiling_for_windows.rst:59
msgid "Installing Visual Studio caveats"
msgstr ""

#: ../../reference/compiling_for_windows.rst:61
msgid ""
"If installing VS 2015, make sure to run **Custom** installation, not "
"**Typical** and select C++ as language there (and any other things you "
"might need). The installer does not install C++ by default. C++ was the "
"`only language made optional "
"<https://blogs.msdn.microsoft.com/vcblog/2015/07/24/setup-changes-in-"
"visual-studio-2015-affecting-c-developers/>`__ in VS2015."
msgstr ""

#: ../../reference/compiling_for_windows.rst:67
msgid ""
"If you have already made the mistake of installing a **Typical**, "
"installation, rerun the executable installer you downloaded from "
"internet, it will give you a **Modify** Button option. Running the "
"install from Add/Remove programs will only give you the \"Repair\" "
"option, which will do nothing for your problem."
msgstr ""

#: ../../reference/compiling_for_windows.rst:73
msgid ""
"If you're using Express, make sure you get/have a version that can "
"compile for ***C++, Desktop***."
msgstr ""

#: ../../reference/compiling_for_windows.rst:77
msgid "Downloading Godot's source"
msgstr ""

#: ../../reference/compiling_for_windows.rst:79
msgid ""
"`Godot's <https://github.com/godotengine/godot>`__ source is hosted on "
"GitHub. Downloading it (cloning) via `Git <https://git-scm.com/>`__ is "
"recommended."
msgstr ""

#: ../../reference/compiling_for_windows.rst:82
msgid ""
"The tutorial will presume from now on that you placed the source into "
"``C:\\godot``."
msgstr ""

#: ../../reference/compiling_for_windows.rst:86
msgid "Compiling"
msgstr ""

#: ../../reference/compiling_for_windows.rst:88
msgid ""
"SCons will not be able out of the box to compile from the standard "
"Windows \"Command Prompt\" (cmd.exe) because SCons and Visual C++ "
"compiler will not be able to locate environment variables and executables"
" they need for compilation."
msgstr ""

#: ../../reference/compiling_for_windows.rst:93
msgid ""
"Therefore, you need to start a Visual Studio command prompt. It sets up "
"environment variables needed by SCons to locate the compiler. It should "
"be called similar to one of the bellow names (for your respective version"
" of Visual Studio):"
msgstr ""

#: ../../reference/compiling_for_windows.rst:98
msgid "\"Developer Command Prompt for VS2013\""
msgstr ""

#: ../../reference/compiling_for_windows.rst:99
msgid "\"VS2013 x64 Native Tools Command Prompt\""
msgstr ""

#: ../../reference/compiling_for_windows.rst:100
msgid "\"VS2013 x86 Native Tools Command Prompt\""
msgstr ""

#: ../../reference/compiling_for_windows.rst:101
msgid "\"VS2013 x64 Cross Tools Command Prompt\""
msgstr ""

#: ../../reference/compiling_for_windows.rst:102
msgid "\"VS2013 x86 Cross Tools Command Prompt\""
msgstr ""

#: ../../reference/compiling_for_windows.rst:104
msgid ""
"You should be able to find at least the Developer Command Prompt for your"
" version of Visual Studio in your start menu."
msgstr ""

#: ../../reference/compiling_for_windows.rst:107
msgid ""
"However Visual Studio sometimes seems to not install some of the above "
"shortcuts, except the Developer Console at these locations that are "
"automatically searched by the start menu search option:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:117
msgid ""
"If you found the Developer Console, it will do for now to create a 32 bit"
" version of Godot, but if you want the 64 bit version, you might need to "
"setup the prompts manually for easy access."
msgstr ""

#: ../../reference/compiling_for_windows.rst:121
msgid ""
"If you don't see some of the shortcuts, \"How the prompts actually work\""
" section bellow will explain how to setup these prompts if you need them."
msgstr ""

#: ../../reference/compiling_for_windows.rst:125
msgid "About the Developer/Tools Command Prompts and the Visual C++ compiler"
msgstr ""

#: ../../reference/compiling_for_windows.rst:127
msgid ""
"There is a few things you need to know about these consoles and the "
"Visual C++ compiler."
msgstr ""

#: ../../reference/compiling_for_windows.rst:130
msgid ""
"Your Visual Studio installation will ship with several Visual C++ "
"compilers, them being more or less identical, however each cl.exe (Visual"
" C++ compiler) will compile Godot for a different architecture (32 or 64 "
"bit, ARM compiler is not supported)."
msgstr ""

#: ../../reference/compiling_for_windows.rst:135
msgid ""
"The **Developer Command Prompt** will build a 32 bit version of Godot by "
"using the 32 bit Visual C++ compiler."
msgstr ""

#: ../../reference/compiling_for_windows.rst:138
msgid ""
"**Native Tools** Prompts (mentioned above) are used when you want the "
"32bit cl.exe to compile a 32 bit executable (x86 Native Tools Command "
"Prompt). For the 64 bit cl.exe, it will compile a 64 bit executable (x64 "
"Native Tools Command Prompt)."
msgstr ""

#: ../../reference/compiling_for_windows.rst:143
msgid ""
"The **Cross Tools** are used when your Windows is using one architecture "
"(32 bit, for example) and you need to compile to a different architecture"
" (64 bit). As you might be familiar, 32 bit Windows can not run 64 bit "
"executables, but you still might need to compile for them."
msgstr ""

#: ../../reference/compiling_for_windows.rst:148
msgid "For example:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:150
msgid ""
"\"VS2013 x64 Cross Tools Command Prompt\" will use a 32 bit cl.exe that "
"will compile a 64 bit application."
msgstr ""

#: ../../reference/compiling_for_windows.rst:153
msgid ""
"\"VS2013 x86 Cross Tools Command Prompt\" will use a 64 bit cl.exe that "
"will compile a 32 bit application. This one is useful if you are running "
"a 32 bit Windows."
msgstr ""

#: ../../reference/compiling_for_windows.rst:157
msgid ""
"On a 64 bit Windows, you can run any of above prompts and compilers "
"(cl.exe executables) because 64 bit windows can run any 32 bit "
"application. 32 bit Windows can not run 64 bit executables, so the Visual"
" Studio installer will not even install shortcuts for some of these "
"prompts."
msgstr ""

#: ../../reference/compiling_for_windows.rst:163
msgid ""
"Note that you need to choose the **Developer Console** or the correct "
"**Tools Prompt** to build Godot for the correct architecture. Use only "
"Native Prompts if you are not sure yet what exactly Cross Compile Prompts"
" do."
msgstr ""

#: ../../reference/compiling_for_windows.rst:169
msgid "Running SCons"
msgstr ""

#: ../../reference/compiling_for_windows.rst:171
msgid ""
"Once inside the **Developer Console/Tools Console Prompt**, go to the "
"root directory of the engine source code and type:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:178
msgid ""
"Tip: if you installed \"Pywin32 Python Extension\" you can append the -j "
"command to instruct SCons to run parallel builds like this:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:185
msgid ""
"In general, it is OK to have at least as many threads compiling Godot as "
"you have cores in your CPU, if not one or two more, I use -j6 (six "
"threads) for my 4 core CPU, your mileage may vary. Feel free to add -j "
"option to any SCons command you see bellow if you setup the \"Pywin32 "
"Python Extension\"."
msgstr ""

#: ../../reference/compiling_for_windows.rst:191
msgid ""
"If all goes well, the resulting binary executable will be placed in "
"``C:\\godot\\bin\\`` with the name of ``godot.windows.tools.32.exe`` or "
"``godot.windows.tools.64.exe``. SCons will automatically detect what "
"compiler architecture the environment (the prompt) is setup for and will "
"build a corresponding executable."
msgstr ""

#: ../../reference/compiling_for_windows.rst:197
msgid ""
"This executable file contains the whole engine and runs without any "
"dependencies. Executing it will bring up the project manager."
msgstr ""

#: ../../reference/compiling_for_windows.rst:201
msgid "How the prompts actually work"
msgstr ""

#: ../../reference/compiling_for_windows.rst:203
msgid ""
"The Visual Studio command prompts are just shortcuts that call the "
"standard Command Prompt and have it run a batch file before giving  you "
"control. The batch file itself is called **vcvarsall.bat** and it sets up"
" environment variables, including the PATH variable, so that the correct "
"version of the compiler can be run.The Developer Command Prompt calls a "
"different file called **VsDevCmd.bat** but none of the other tools that "
"this batch file enables are needed by Godot/SCons."
msgstr ""

#: ../../reference/compiling_for_windows.rst:211
msgid ""
"Since you are probably using VS2013 or VS2015, if you need to recreate "
"them manually, use the bellow folders, or place them on the "
"desktop/taskbar:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:220
msgid ""
"Start the creation of the shortcut by pressing the ``right mouse "
"button/New/Shortcut`` in an empty place in your desired location."
msgstr ""

#: ../../reference/compiling_for_windows.rst:223
msgid ""
"Then copy one of these commands bellow for the corresponding tool you "
"need into the \"Path\" and \"Name\" sections of the shortcut creation "
"wizard, and fix the path to the batch file if needed."
msgstr ""

#: ../../reference/compiling_for_windows.rst:227
msgid "VS2013 is in the \"Microsoft Visual Studio 12.0\" folder."
msgstr ""

#: ../../reference/compiling_for_windows.rst:228
msgid "VS2015 is in the \"Microsoft Visual Studio 14.0\" folder."
msgstr ""

#: ../../reference/compiling_for_windows.rst:229
msgid "etc."
msgstr ""

#: ../../reference/compiling_for_windows.rst:248
msgid ""
"After you create the shortcut, in the shortcut's properties, that you can"
" access by right clicking with your mouse on the shortcut itself, you can"
" choose the starting directory of the command prompt (\"Start in\" "
"field)."
msgstr ""

#: ../../reference/compiling_for_windows.rst:253
msgid ""
"Some of these shortcuts (namely the 64 bit compilers) seem to not be "
"available in the Express edition of Visual Studio or Visual C++. Before "
"recreating the commands, make sure that cl.exe executables are present in"
" one of these locations, they are the actual compilers for the "
"arhitecture you want to build from the command prompt."
msgstr ""

#: ../../reference/compiling_for_windows.rst:274
msgid ""
"In case you are wondering what these prompt shortcuts do, they call the "
"standard cmd.exe with \\\\k option and have it run a batch file..."
msgstr ""

#: ../../reference/compiling_for_windows.rst:286
msgid "How to run an automated build of Godot"
msgstr ""

#: ../../reference/compiling_for_windows.rst:288
msgid ""
"If you need to just run the compilation process via a batch file or "
"directly in the vanilla Windows Command Prompt you need to do the "
"following command:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:296
msgid "with one of the following parameters:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:298
msgid "x86 (32 bit cl.exe to compile for the 32 bit architecture)"
msgstr ""

#: ../../reference/compiling_for_windows.rst:299
msgid "amd64 (64 bit cl.exe to compile for the 64 bit architecture)"
msgstr ""

#: ../../reference/compiling_for_windows.rst:300
msgid "x86_amd64 (32 bit cl.exe to compile for the 64 bit architecture)"
msgstr ""

#: ../../reference/compiling_for_windows.rst:301
msgid "amd64_x86 (64 bit cl.exe to compile for the 32 bit architecture)"
msgstr ""

#: ../../reference/compiling_for_windows.rst:303
msgid "and after that one, you can run SCons:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:309
msgid "or  you can do them together:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:320
msgid "Development in Visual Studio or other IDEs"
msgstr ""

#: ../../reference/compiling_for_windows.rst:322
msgid ""
"For most projects, using only scripting is enough but when development in"
" C++ is needed, for creating modules or extending the engine, working "
"with an IDE is usually desirable."
msgstr ""

#: ../../reference/compiling_for_windows.rst:326
msgid ""
"You can create a Visual Studio solution via SCons by running SCons with "
"the vsproj=yes parameter, like this:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:333
msgid ""
"You will be able to open Godot's source in a Visual Studio solution now, "
"and able to build Godot via the Visual Studio **Build** button. However, "
"make sure that you have installed Pywin so that parallel (-j) builds work"
" properly."
msgstr ""

#: ../../reference/compiling_for_windows.rst:338
msgid ""
"If you need to edit the compilation commands, they are located in "
"\"Godot\" project settings, NMAKE sheet. SCons is called at the very end "
"of the commands. If you make a mistake, copy the command from one of the "
"other build configurations (debug, release_debug, release) or "
"architectures (Win32/x64). They are equivalent."
msgstr ""

#: ../../reference/compiling_for_windows.rst:345
msgid "Cross-compiling for Windows from other operating systems"
msgstr ""

#: ../../reference/compiling_for_windows.rst:347
msgid ""
"If you are a Linux or Mac user, you need to install mingw32 and "
"mingw-w64. Under Ubuntu or Debian, just run the following commands:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:354
msgid ""
"If you are using another distro, SCons will check for the following "
"binaries:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:362
msgid ""
"If the binaries are named or located somewhere else, export the following"
" env variables:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:370
msgid ""
"To make sure you are doing things correctly, executing the following in "
"the shell should result in a working compiler:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:379
msgid "Creating Windows export templates"
msgstr ""

#: ../../reference/compiling_for_windows.rst:381
msgid ""
"Windows export templates are created by compiling Godot as release, with "
"the following flags:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:384
msgid "(using Mingw32 command prompt, using the bits parameter)"
msgstr ""

#: ../../reference/compiling_for_windows.rst:391
msgid "(using Mingw-w64 command prompt, using the bits parameter)"
msgstr ""

#: ../../reference/compiling_for_windows.rst:398
msgid ""
"(using the Visual Studio command prompts for the correct architecture, "
"notice the lack of bits parameter)"
msgstr ""

#: ../../reference/compiling_for_windows.rst:406
msgid "If you plan on replacing the standard templates, copy these to:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:412
msgid "With the following names:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:421
msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your binaries as custom export templates "
"here:"
msgstr ""

#: ../../reference/compiling_for_windows.rst:427
msgid ""
"You don't even need to copy them, you can just reference the resulting "
"files in the ``bin\\`` directory of your Godot source folder, so the next"
" time you build you automatically have the custom templates referenced."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2016, Juan Linietsky, Ariel Manzur and the Godot
# community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-08-22 23:27+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh\n"
"Language-Team: GoDogeCN\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../reference/compiling_for_universal_windows_apps.rst:4
msgid "Compiling for Universal Windows Apps"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:8
msgid ""
"This page documents the current state of the \"winrt\" platform, used to "
"support \"Windows Store Apps\" for Windows 8.1, and Windows Phone 8.1 "
"apps using Microsoft's new \"Universal\" APIs."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:13
msgid "Requirements"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:15
msgid "Windows 8"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:16
msgid "SCons (see :ref:`doc_compiling_for_windows` for more details)"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:17
msgid ""
"Visual Studio 2013 for Windows (but *not* \"for Windows Desktop\"). "
"Tested on \"Microsoft Visual Studio Express 2013 for Windows Version "
"12.0.31101.00 Update 4\"."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:22
msgid "Compiling"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:24
msgid ""
"The platform can compile binaries for both Windows 8.1 and Windows Phone "
"8.1. The architecture is decided by the environment variable "
"\"PLATFORM\"."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:28
msgid "Windows 8.1"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:30
msgid "Open a \"VS 2013 x64 Cross Tools Command Prompt\""
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:31
msgid "The value of environment variable \"PLATFORM\" should be \"x64\""
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:32
#: ../../reference/compiling_for_universal_windows_apps.rst:45
msgid "Run scons with ``platform=winrt`` from the root of the source tree::"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:36
msgid ""
"You should get an executable file inside bin/ named according to your "
"build options, for the architecture \"x64\", for example "
"\"godot.winrt.tools.x64.exe\"."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:41
msgid "Windows Phone 8.1"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:43
msgid "Open a \"Visual Studio 2012 ARM Phone Tools Command Prompt\""
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:44
msgid "The value of environment variable \"PLATFORM\" should be \"arm\""
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:49
msgid ""
"You should get an executable file inside bin/ named according to your "
"build options, for the architecture \"arm\", for example "
"\"godot.winrt.tools.arm.exe\"."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:54
msgid "Running"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:56
msgid ""
"On Visual studio, create a new project using any of the \"Universal App\""
" templates found under Visual C++ -> Store Apps -> Universal Apps. "
"\"Blank App\" should be fine."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:60
msgid ""
"On the \"Solution Explorer\" box, you should have 3 sections, "
"\"App.Windows (Windows 8.1)\", \"App.WindowsPhone (Windows Phone 8.1)\" "
"and \"App.Shared\". You need to add files to each section:"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:65
msgid "App.Shared"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:67
msgid ""
"Add a folder named \"game\" containing your game content (can be "
"individual files or your data.pck). Remember to set the \"Content\" "
"property of each file to \"True\", otherwise your files won't get "
"included in the package."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:72
msgid "App.Windows"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:74
msgid ""
"Add your windows executable, and all the .dll files found on "
"platform/winrt/x64/bin on the godot source. Remember to also set the "
"\"Content\" property."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:77
msgid ""
"Find the file \"Package.appxmanifest\". Right click on it and select "
"\"Open with...\" then \"XML (Text) Editor\" from the list."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:79
msgid ""
"Find the \"Application\" section, and add (or modify) the \"Executable\" "
"property with the name of your .exe. Example:"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:87
msgid "App.WindowsPhone"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:89
msgid ""
"Repeat all the steps from App.Windows, using your arm executable and the "
"dlls found in platform/winrt/arm/bin. Remember to set the \"Content\" "
"property for all the files."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:93
msgid ""
"Use the green \"Play\" button on the top to run. The drop down menu next "
"to it should let you choose the project (App.Windows or App.WindowsPhone)"
" and the device (\"Local Machine\", \"Device\" for an attached phone, "
"etc)."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:99
msgid "Angle"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:101
msgid ""
"ANGLE precompiled binaries are provided on platform/winrt/x64 and "
"platform/winrt/arm. They are built from MSOpenTech's \"future-dev\" "
"branch, found here: https://github.com/MSOpenTech/angle. The visual "
"studio 'solutions' used are found on ``projects/winrt/windows/angle.sln``"
" and ``projects/winrt/windowsphone/angle.sln``."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:108
msgid "What's missing"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:110
msgid "Audio"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:111
msgid "Semaphores"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:112
msgid "Keyboard input"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:113
msgid "Proper handling of screen rotation"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:114
msgid "Proper handling of other events such as focus lost, back button, etc."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:115
msgid "Packaging and deploying to devices from the editor."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:116
msgid ""
"Adding Angle to our tree and compiling it from there. The same source "
"could also be used to build for Windows (and use Angle instead of native "
"GL, which will be more compatible with graphics hardware)"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:121
msgid "Packages"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:123
msgid "This is what we know:"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:125
msgid ""
"App packages are documented here: http://msdn.microsoft.com/en-"
"us/library/windows/apps/xaml/hh464929.aspx"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:127
msgid ""
"There are 2 command line tools that might be useful, `App Packager "
"<http://msdn.microsoft.com/en-"
"us/library/windows/apps/xaml/hh446767.aspx>`__ and `SignTool "
"<http://msdn.microsoft.com/en-"
"us/library/windows/apps/xaml/ff551778.aspx>`__."
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:131
msgid ""
"There are a bunch of tools on \"powershell\" that deal with packages that"
" might be relevant: http://technet.microsoft.com/library/dn448373.aspx"
msgstr ""

#: ../../reference/compiling_for_universal_windows_apps.rst:134
msgid ""
"When running a Windows 8.1 app on \"Local Machine\" from Visual studio, "
"the app seems to run from an uncompressed directory on the filesystem in "
"an arbitrary location (ie. outside of the proper directory where Apps are"
" installed), but there is some special registry entry made for it, so we "
"know it's possible to skip the packaging step to run locally (in the case"
" of very big games this can be useful)."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2016, Juan Linietsky, Ariel Manzur and the Godot
# community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-08-22 23:27+0800\n"
"PO-Revision-Date: 2016-08-24 23:41+0800\n"
"Language: zh\n"
"Language-Team: GoDogeCN\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Last-Translator: \n"
"X-Generator: Poedit 1.8.8\n"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:4
msgid "Viewport and canvas transforms"
msgstr "视窗与画布变换(Viewport and canvas transforms)"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:7
msgid "Introduction"
msgstr "介绍"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:9
msgid ""
"This tutorial is created after a topic that is a little dark for most "
"users, and explains all the 2D transforms going on for nodes from the "
"moment they draw their content locally to the time they are drawn into the "
"screen."
msgstr ""
"这篇教程创建于一个对于大多数用户来说都比较晦涩难懂的主题之后，并解释了所有节"
"点上的2D变换发生时，在绘制场景时同时其绘制自身。"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:15
msgid "Canvas transform"
msgstr "画布变换(Canvas transform)"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:17
msgid ""
"As mentioned in the previous tutorial, :ref:`doc_canvas_layers`, every "
"CanvasItem node (remember that Node2D and Control based nodes use "
"CanvasItem as their common root) will reside in a *Canvas Layer*. Every "
"canvas layer has a transform (translation, rotation, scale, etc.) that can "
"be accessed as a :ref:`Matrix32 <class_Matrix32>`."
msgstr ""
"上个教程提到，:ref:`doc_canvas_layers`，每个CanvasItem节点（记住，所有继承自"
"Node2D和Control的节点都以CanvasItem作为其根节点）都属于 *Canvas Layer*。每个"
"canvas layer都有一个变换属性（平移，旋转，缩放等），可以通过 :ref:`Matrix32 "
"<class_Matrix32>` 访问。"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:23
msgid ""
"Also covered in the previous tutorial, nodes are drawn by default in Layer "
"0, in the built-in canvas. To put nodes in a different layer, a :ref:"
"`CanvasLayer <class_CanvasLayer>` node can be used."
msgstr ""
"我们知道，默认情况下，节点被绘制在 layer0，可以使用:ref:"
"`CanvasLayer<class_CanvasLayer>`来将节点绘制在不同的层。"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:28
msgid "Global canvas transform"
msgstr "全局画布变换(Global canvas transform)"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:30
msgid ""
"Viewports also have a Global Canvas transform (also a :ref:`Matrix32 "
"<class_Matrix32>`). This is the master transform and affects all individual "
"*Canvas Layer* transforms. Generally this transform is not of much use, but "
"is used in the CanvasItem Editor in Godot's editor."
msgstr ""
"视窗拥有一个全局画布变换的属性，这是一个:ref:`Matrix32 <class_Matrix32>`。此"
"属性最主要且影响其他所有 *Canvas Layer*。我们一般不会用到这个属性，但在Godot"
"编辑器中被用作编辑 Canvas Item。"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:37
msgid "Stretch transform"
msgstr "拉伸(Stretch transform)"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:39
msgid ""
"Finally, viewports have a *Stretch Transform*, which is used when resizing "
"or stretching the screen. This transform is used internally (as described "
"in :ref:`doc_multiple_resolutions`), but can also be manually set on each "
"viewport."
msgstr ""
"视窗有一个 *Stretch Transform* 属性，用于屏幕大小变化时。这个属性一般由系统"
"内部调用（详见：:ref:`doc_multiple_resolutions`），但也可以手动设置。"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:44
msgid ""
"Input events received in the :ref:`MainLoop._input_event() "
"<class_MainLoop__input_event>` callback are multiplied by this transform, "
"but lack the ones above. To convert InputEvent coordinates to local "
"CanvasItem coordinates, the :ref:`CanvasItem.make_input_local() "
"<class_CanvasItem_make_input_local>` function was added for convenience."
msgstr ""
":ref:`MainLoop._input_event() <class_MainLoop__input_event>`回调发出的Input"
"事件同样受该属性影响。要将事件坐标转化为CanvasItem的坐标，使用:ref:"
"`CanvasItem.make_input_local() <class_CanvasItem_make_input_local>`。"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:51
msgid "Transform order"
msgstr "变换顺序(Transform order)"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:53
msgid ""
"For a coordinate in CanvasItem local properties to become an actual screen "
"coordinate, the following chain of transforms must be applied:"
msgstr "要将 CanvasItem 的本地坐标转换为屏幕坐标， 需要经过以下流程："

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:59
msgid "Transform functions"
msgstr "变换方法(Transform functions)"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:61
msgid "Obtaining each transform can be achieved with the following functions:"
msgstr "可以通过以下方法来获取每个变换："

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:64
msgid "Type"
msgstr ""

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:64
msgid "Transform"
msgstr ""

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:66
msgid "CanvasItem"
msgstr ""

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:66
msgid ""
":ref:`CanvasItem.get_global_transform() "
"<class_CanvasItem_get_global_transform>`"
msgstr ""

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:68
msgid "CanvasLayer"
msgstr ""

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:68
msgid ""
":ref:`CanvasItem.get_canvas_transform() "
"<class_CanvasItem_get_canvas_transform>`"
msgstr ""

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:70
msgid "CanvasLayer+GlobalCanvas+Stretch"
msgstr ""

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:70
msgid ""
":ref:`CanvasItem.get_viewport_transform() "
"<class_CanvasItem_get_viewport_transform>`"
msgstr ""

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:73
msgid ""
"Finally then, to convert a CanvasItem local coordinates to screen "
"coordinates, just multiply in the following order:"
msgstr ""
"然后，要将CanvasItem的本地坐标转化为屏幕坐标，只需按照下面的顺序相乘："

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:80
msgid ""
"Keep in mind, however, that it is generally not desired to work with screen "
"coordinates. The recommended approach is to simply work in Canvas "
"coordinates (``CanvasItem.get_global_transform()``), to allow automatic "
"screen resolution resizing to work properly."
msgstr ""
"注意，一般不通过屏幕坐标来进行变换，我们建议使用画布的本地坐标(``CanvasItem."
"get_global_transform()``)来保证屏幕分辨率改变时正确工作。"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:86
msgid "Feeding custom input events"
msgstr "触发自定义事件"

#: ../../tutorials/2d/viewport_and_canvas_transforms.rst:88
msgid ""
"It is often desired to feed custom input events to the scene tree. With the "
"above knowledge, to correctly do this, it must be done the following way:"
msgstr "如需要在场景中触发自定义事件，通过前面的教程，可以这样做："

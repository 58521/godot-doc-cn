# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2016, Juan Linietsky, Ariel Manzur and the Godot
# community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-08-22 23:27+0800\n"
"PO-Revision-Date: 2016-08-24 23:00+0800\n"
"Language: zh\n"
"Language-Team: GoDogeCN\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Last-Translator: \n"
"X-Generator: Poedit 1.8.8\n"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:4
msgid "Scenes and nodes"
msgstr "场景与节点"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:7
msgid "Introduction"
msgstr "介绍"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:11
msgid ""
"Imagine for a second that you are not a game developer anymore. Instead, "
"You are a chef! Change your hipster outfit for a toque and a double "
"breasted jacket. Now, instead of making games, you create new and "
"delicious recipes for your guests."
msgstr ""
"试想一秒钟你不再是一个游戏开发者。取而代之地，你是一个大厨！把你时髦的衣服"
"换成一个无檐帽和一个双排扣夹克。现在，你是在为你的宾客打造一个美味的菜肴而"
"不是在做游戏。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:16
msgid ""
"So, how does a chef create a recipe? Recipes are divided in two sections, "
"the first is the ingredients and the second is the instructions to "
"prepare it. This way, anyone can follow the recipe and savor your "
"magnificent creation."
msgstr ""
"所以，一个伙夫如何打造一个菜品呢？菜谱被分为两部分，第一个是成分，第二个是"
"关于准备它的说明。以这种方式，任何人都能够遵照菜谱并调制出你的绝佳创意。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:21
msgid ""
"Making games in Godot feels pretty much the same way. Using the engine "
"feels like being in a kitchen. In this kitchen, *nodes* are like a "
"refrigerator full of fresh ingredients to cook with."
msgstr ""
"在Godot中制作游戏和这种方式非常相同。使用这个引擎感觉就像是在厨房里。在这"
"个厨房里，“节点（Nodes）”就是装满了用于烹饪的新鲜材料的冰箱。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:25
msgid ""
"There are many types of nodes, some show images, others play sound, other "
"nodes display 3D models, etc. There's dozens of them."
msgstr ""
"有很多种类型的节点，有的显示图像、有的播放声音、有的节点显示3D模型等等。有"
"很多。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:29
msgid "Nodes"
msgstr "节点（Nodes）"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:31
msgid ""
"But let's go to the basics. A node is a basic element for creating a "
"game, it has the following characteristics:"
msgstr ""
"但先让我们来走基础。一个节点是创建一个游戏的基本元素，它具有一下性质："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:34
msgid "Has a name."
msgstr "有名字（Name）"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:35
msgid "Has editable properties."
msgstr "具有可编辑的属性（Editable Properties）。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:36
msgid "Can receive a callback to process every frame."
msgstr "每帧（Frame）都能接收对进程的回调（Callback）。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:37
msgid "Can be extended (to have more functions)."
msgstr "能够被扩展（Extended）（来具有更多的功能（Functions））。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:38
msgid "Can be added to other nodes as children."
msgstr "能够加入其他的节点作为子（Child）。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:42
msgid ""
"The last one is very important. Nodes can have other nodes as children. "
"When arranged in this way, the nodes become a **tree**."
msgstr ""
"最后一个很重要。节点能够使其他节点作为子类。当以这种方式编排的时候，节点会"
"变成一个“树”。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:45
msgid ""
"In Godot, the ability to arrange nodes in this way creates a powerful "
"tool for organizing the projects. Since different nodes have different "
"functions, combining them allows to create more complex functions."
msgstr ""
"在Godot中，以这种方式来编排节点的能力为组织整理工程创造了一个强有力的工"
"具。因为不同的节点有不同的功能，将他们结合起来则允许了创建更多复杂的功能。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:49
msgid ""
"This is probably not clear yet and it makes little sense, but everything "
"will click a few sections ahead. The most important fact to remember for "
"now is that nodes exist and can be arranged this way."
msgstr ""
"这可能还不甚清晰并且几乎没什么意义。但是过了几节后一切都将大白。目前要记住"
"最重要的一点是有节点这个东西存在，并且能够按这种方式来编排。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:54
msgid "Scenes"
msgstr "场景（Scene）"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:58
msgid ""
"Now that the existence of nodes has been defined, the next logical step "
"is to explain what a Scene is."
msgstr "既然节点的存在已经被定义了，下一个逻辑步骤就是解释什么是场景了。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:61
msgid ""
"A scene is composed of a group of nodes organized hierarchically (in tree "
"fashion). It has the following properties:"
msgstr ""
"一个场景由一组（以树形图的方式）被分层组织的节点组成，它具有以下属性："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:64
msgid "A scene always has only one root node."
msgstr "一个场景有且只能有一个根节点（Root Node）。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:65
msgid "Scenes can be saved to disk and loaded back."
msgstr "场景能够被保存到磁盘上，也能被载入回来。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:66
msgid "Scenes can be *instanced* (more on that later)."
msgstr "场景能够被“实例化”（Instanced）（后文说明原因）。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:67
msgid "Running a game means running a scene."
msgstr "运行一个游戏意味着运行一个场景。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:68
msgid ""
"There can be several scenes in a project, but for it to start, one of "
"them must selected to be loaded first."
msgstr ""
"一个工程中可以有几个场景，但是要开始，它们中的一个必须被选定来首先载入。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:71
msgid ""
"Basically, the Godot editor is a **scene editor**. It has plenty of tools "
"for editing 2D and 3D scenes as well as user interfaces, but all the "
"editor revolves around the concept of editing a scene and the nodes that "
"compose it."
msgstr ""
"基本上，Godot编辑器就是一个“场景编辑器”（Scene Editor）。它有很多工具来编"
"辑2D和3D场景以及用户界面（UI，User Interface），但是编辑器的所有内容都是围"
"绕着编辑构成它的场景和节点的概念展开的。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:77
msgid "Creating a new project"
msgstr "创建一个新工程（Project）"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:79
msgid ""
"Theory is boring, so let's change subject and go practical. Following a "
"long tradition in tutorials, the first project will be a hello world. For "
"this, the editor will be used."
msgstr ""
"理论是枯燥的，所以我们来转换话题走向实际。按照教程类文章的长期传统，第一个"
"工程将会是一个Hello World。为了这件事，编辑器将会被使用。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:83
msgid ""
"When godot executable is run outside a project, the Project Manager "
"appears. This helps developers manage their projects."
msgstr ""
"当Godot可执行程序脱离一个工程运行，工程管理器（Project Manager）就出现了，"
"它帮助开发者管理他们的工程。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:88
msgid ""
"To create a new project, the \"New Project\" option must be used. Choose "
"and create a path for the project and specify the project name:"
msgstr ""
"要创建一个新工程，“新建工程”（New Project）选项肯定被使用。给选择并创建一"
"个路径（Path）然后指定工程的名字（Name）："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:94
msgid "Editor"
msgstr "编辑器（Editor）"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:96
msgid ""
"Once the \"New Project\" is created, the next step is opening it. This "
"will open the Godot editor. Here is how the editor looks when freshly "
"opened:"
msgstr ""
"一旦这个“新工程”被创建，下一步就是打开它。这将会打开Godot编辑器。下图展示"
"了刚打开编辑器时它的样子："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:102
msgid ""
"As mentioned before, making games in Godot feels like being in a kitchen, "
"so let's open the refrigerator and add some fresh nodes to the project. "
"We'll begin with a Hello World! To do this, the \"New Node\" button must "
"be pressed:"
msgstr ""
"如前文所述，在Godot中制作游戏就像是在厨房里一样，所以我们来打开冰箱然后加"
"入一些新鲜的节点到工程中。我们将会以一个Hello World!开始。为了做到这一点，"
"肯定要按下“新建节点”（New Node）按钮："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:109
msgid ""
"This will open the Create Node dialog, showing the long list of nodes "
"that can be created:"
msgstr ""
"这将会打开创建节点（Create Node）对话框，展示了一长串能够被创建的节点列"
"表："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:114
msgid ""
"From there, select the \"Label\" node first. Searching for it is probably "
"the quickest way:"
msgstr "从这里，先选择“标签”（Label）节点。直接搜索它可能是最快捷的方式："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:119
msgid "And finally, create the Label! A lot happens when Create is pressed:"
msgstr ""
"并且最终，我们创建了一个标签（Label）！当创建被按下时，很多事情就发生了："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:123
msgid ""
"First of all, the scene is changed to the 2D editor (because Label is a "
"2D Node type), and the Label appears, selected, at the top left corner of "
"the viewport."
msgstr ""
"首先，场景变成了一个2D编辑器（因为Label是一个2D节点类型），并且当Label出现"
"时，选定，在视图（Viewport）的左上角。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:127
msgid ""
"The node appears in the scene tree editor (box in the top left corner), "
"and the label properties appear in the Inspector (box on the right side)."
msgstr ""
"这个节点出现在了场景树编辑器（Scene Tree Editor）（左上方的一栏里），而且"
"标签的属性（Property）出现在了检查工具（Inspector）中（右侧的一栏）。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:131
msgid ""
"The next step will be to change the \"Text\" Property of the label, let's "
"change it to \"Hello, World!\":"
msgstr ""
"下一步就是去改变标签的“文本”（Text）属性了，我们来把它改成“Hello,World!”："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:136
msgid ""
"Ok, everything's ready to run the scene! Press the PLAY SCENE Button on "
"the top bar (or hit F6):"
msgstr ""
"好了，一切都已就绪来运行场景了！在顶栏按下“运行场景”（Play Scene）按钮（或"
"敲击F6）："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:141
msgid "Aaaand... Oops."
msgstr "然……然后，噢天哪！"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:145
msgid ""
"Scenes need to be saved to be run, so save the scene to something like "
"hello.scn in Scene -> Save:"
msgstr ""
"场景需要被保存才能运行，所以在场景→保存（Scene->Save）菜单中把场景保存成"
"hello.scn："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:150
msgid ""
"And here's when something funny happens. The file dialog is a special "
"file dialog, and only allows to save inside the project. The project root "
"is \"res://\" which means \"resource path. This means that files can only "
"be saved inside the project. For the future, when doing file operations "
"in Godot, remember that \"res://\" is the resource path, and no matter "
"the platform or install location, it is the way to locate where resource "
"files are from inside the game."
msgstr ""
"然后，有趣的事情发生了。这个文件对话框是一个特别的文件对话框，只允许在工程"
"内保存。工程根目录是“res://”，意味着“资源路径”（Resource Path）。这也就意"
"味着，文件只可以被保存到工程的内部。日后，当进行文件操作的时候记"
"住，“res://”就是资源的路径，并且无论平台和安装位置，它都是游戏中的资源文件"
"所在的一种定位方式。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:158
msgid ""
"After saving the scene and pressing run scene again, the \"Hello, World!"
"\" demo should finally execute:"
msgstr "在保存场景并再一次按下运行场景之后，“Hello, World!”演示应该被执行："

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:163
msgid "Success!"
msgstr "成功了！"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:168
msgid "Configuring the project"
msgstr "配置（Configuring）工程"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:170
msgid ""
"Ok, It's time to do some configuration to the project. Right now, the "
"only way to run something is to execute the current scene. Projects, "
"however, have several scenes so one of them must be set as the main "
"scene. This scene is the one that will be loaded at the time the project "
"is run."
msgstr ""
"好了，是时候去给工程做点配置（Configuration）了。就是现在，唯一运行某些东"
"西的方式就是执行当前的场景。然而，工程有多个场景，因此其中一个必须被设定为"
"主场景（Main Scene）。这个场景是将会在工程运行时被载入的场景。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:176
msgid ""
"These settings are all stored in the engine.cfg file, which is a "
"plaintext file in win.ini format, for easy editing. There are dozens of "
"settings that can be set in that file to alter how a project executes, so "
"to make matters simpler, a project setting dialog exists, which is sort "
"of a frontend to editing engine.cfg"
msgstr ""
"这些设定将全部被存在engine.cfg文件中，一个win.ini格式的普通文本文件，以便"
"编辑。有一些设定可以在这个文件中被设定，来更改工程的执行方式，所以为了让情"
"况更简单，工程设定（Project Setting）对话框，一种编辑engine.cfg的前端，诞"
"生了。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:182
msgid "To access that dialog, simply go to Scene -> Project Settings."
msgstr ""
"为了通向这个对话框，只需要走场景→工程设定（Scene -> Project Settings）。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:184
msgid ""
"Once the window opens, the task will be to select a main scene. This can "
"be done easily by changing the application/main_scene property and "
"selecting 'hello.scn'."
msgstr ""
"一旦这个窗口打开了，任务就是选一个主场景。这可以很轻易的完成通过改变应用/"
"主场景属性（Application/main_scene）然后选择\"hello.scn\"。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:190
msgid ""
"With this change, pressing the regular Play button (or F5) will run the "
"project, no matter which scene is being edited."
msgstr ""
"伴随这个改变，按下常规运行（Play）按钮（或者F5）将会运行这个工程，无论场景"
"是否正在被编辑。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:193
msgid ""
"Going back to the project settings dialog. This dialog provides a lot of "
"options that can be added to engine.cfg and show their default values. If "
"the default value is ok, then there isn't any need to change it."
msgstr ""
"回到场景设定对话框，这个对话框提供了许多能够被加到engine.cfg的选项并且显示"
"出了他们的默认值，如果默认值就可以，那就无需改变它。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:198
msgid ""
"When a value is changed, a tick is marked to the left of the name. This "
"means that the property will be saved to the engine.cfg file and "
"remembered."
msgstr ""
"当一个值改变时，一个对勾被标记在名字的左侧。这意味着这个属性将被保存到"
"engine.cfg文件中并且会被记住。"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:202
msgid ""
"As a side note, for future reference and a little out of context (this is "
"the first tutorial after all!), it is also possible to add custom "
"configuration options and read them in run-time using the :ref:`Globals "
"<class_Globals>` singleton."
msgstr ""
"附注，对于后文的引用以及超出上文的内容（毕竟这是第一篇教程啊喂！），添加自"
"定义的配置属性又使用:ref:`全局（Globals） <class_Globals>` 实例来在运行期"
"间读取它们是可行的."

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:208
msgid "To be continued..."
msgstr "未完待续……"

#: ../../tutorials/step_by_step/scenes_and_nodes.rst:210
msgid ""
"This tutorial talks about \"scenes and nodes\", but so far there has been "
"only *one* scene and *one* node! Don't worry, the next tutorial will deal "
"with that..."
msgstr ""
"这篇教程谈论了“场景和节点”，但是目前为止，还只有一个场景和一个节点！别担"
"心，下一篇教程将会解决这个问题……"

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2016, Juan Linietsky, Ariel Manzur and the Godot
# community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-08-22 23:27+0800\n"
"PO-Revision-Date: 2016-08-24 22:49+0800\n"
"Language: zh\n"
"Language-Team: GoDogeCN\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Last-Translator: \n"
"X-Generator: Poedit 1.8.8\n"

#: ../../tutorials/step_by_step/instancing_continued.rst:4
msgid "Instancing (continued)"
msgstr "实例化(续)"

#: ../../tutorials/step_by_step/instancing_continued.rst:7
msgid "Recap"
msgstr "回顾"

#: ../../tutorials/step_by_step/instancing_continued.rst:9
msgid "Instancing has many handy uses. At a glance, with instancing you have:"
msgstr "实例化有很多便捷的用途。大致扫一眼，用实例化你会有："

#: ../../tutorials/step_by_step/instancing_continued.rst:11
msgid "The ability to subdivide scenes and make them easier to manage."
msgstr "细分场景并使其更简单去管理的能力。"

#: ../../tutorials/step_by_step/instancing_continued.rst:12
msgid ""
"A more flexible alternative to prefabs (and much more powerful given "
"instances work at many levels)."
msgstr ""
"预设（Prefab）的一个更灵活的替代品（将实例用到多个关卡/场景里，将会发挥实例"
"的强大作用）。"

#: ../../tutorials/step_by_step/instancing_continued.rst:14
msgid ""
"A way to design more complex game flows or even UIs (UI Elements are nodes "
"in Godot too)."
msgstr ""
"一种方式来设计更复杂的游戏流程或者甚至是UI（用户界面）（UI元素在Godot中也是"
"节点）。"

#: ../../tutorials/step_by_step/instancing_continued.rst:18
msgid "Design language"
msgstr "设计语言"

#: ../../tutorials/step_by_step/instancing_continued.rst:20
msgid ""
"But the real strong point of instancing scenes is that it works as an "
"excellent design language. This is pretty much what makes Godot special and "
"different to any other engine out there. The entire engine was designed "
"from the ground up around this concept."
msgstr ""
"但是实例化场景的真正重点是它作为一个优秀的设计语言来工作。这也是使得Godot特"
"别并且不同于其他游戏引擎的相当主要的东西。整个引擎从基本往上都是围绕这个概念"
"设计的。"

#: ../../tutorials/step_by_step/instancing_continued.rst:25
msgid ""
"When making games with Godot, the recommended approach is to leave aside "
"other design patterns such as MVC or Entity-Relationship diagrams and start "
"thinking games in a more natural way. Start by imagining the visible "
"elements in a game, the ones that can be named not by just a programmer but "
"by anyone."
msgstr ""
"当使用Godot制作游戏时，推荐的方法是把其他的设计风格例如MVC（模型-视图-控制器"
"模式）或者实体关系图（E-R图）抛开，并且开始以一种自然的方式思考游戏。开始想"
"象游戏中的所有可视元素，那些能够不止被一个程序员，而是能被任何人命名的东西。"

#: ../../tutorials/step_by_step/instancing_continued.rst:31
msgid "For example, here's how a simple shooter game can be imagined:"
msgstr "比如说，想象一下有一个简单的射击游戏："

#: ../../tutorials/step_by_step/instancing_continued.rst:35
msgid ""
"It's pretty easy to come up with a diagram like this for almost any kind of "
"game. Just write down the elements that come to mind, and then the arrows "
"that represent ownership."
msgstr ""
"对于几乎任意类型的游戏来说想到一个像这样的图标是相当简单的。只需要写下脑海中"
"的元素，然后还有表达它们所属关系的箭头。"

#: ../../tutorials/step_by_step/instancing_continued.rst:39
msgid ""
"Once this diagram exists, making a game is about creating a scene for each "
"of those nodes, and use instancing (either by code or from the editor) to "
"represent ownership."
msgstr ""
"一旦这个图表形成了，制作一个游戏大概就是为每个节点创建一个场景然后使用实例"
"（或者是通过代码，或者通过编辑器）来代表所属关系。"

#: ../../tutorials/step_by_step/instancing_continued.rst:42
msgid ""
"Most of the time programming games (or software in general) is spent "
"designing an architecture and fitting game components to that architecture. "
"Designing based on scenes replaces that and makes development much faster "
"and more straightforward, allowing to concentrate on the game itself. Scene/"
"Instancing based design is extremely efficient at saving a large part of "
"that work, since most of the components designed map directly to a scene. "
"This way, none or little architectural code is needed."
msgstr ""
"编写一个游戏（或者是通用的软件）的绝大部分时间被花费在设计一个结构以及把游戏"
"组件适配到那个结构当中。基于场景的设计替代了那件事并且使得开发更加的快也更加"
"的直接,允许关注游戏的自身。基于场景/实例化的设计非常高效，在于节省了大量的工"
"作，因为大部分被设计的组件一一映射到一个场景。这样，就很少或不再需要的结构代"
"码。"

#: ../../tutorials/step_by_step/instancing_continued.rst:51
msgid ""
"The following is a more complex example, an open-world type of game with "
"lots of assets and parts that interact:"
msgstr ""
"下面是一个更加复杂的实例，一个开放世界类型的游戏会有很多互动的资源和组件："

#: ../../tutorials/step_by_step/instancing_continued.rst:56
msgid ""
"Make some rooms with furniture, then connect them. Make a house later, and "
"use those rooms as the interior."
msgstr ""
"制作一些带有家具的房间，然后把他们连接起来。然后做一个房子，并用这些房间作为"
"内容物。"

#: ../../tutorials/step_by_step/instancing_continued.rst:59
msgid ""
"The house can be part of a citadel, which has many houses. Finally the "
"citadel can be put on the world map terrain. Add also guards and other NPCs "
"to the citadel by previously creating their scenes."
msgstr ""
"房子可以是一个城堡，有很多的房子。最终这个营垒可以被放倒世界地图地形上，再把"
"守卫和其他的NPC（非玩家角色）添加到城堡通过在这之前创建他们的场景。"

#: ../../tutorials/step_by_step/instancing_continued.rst:63
msgid ""
"With Godot, games can grow as quickly as desired, as only more scenes have "
"to be made and instanced. The editor UI is also designed to be operated by "
"non programmers too, so an usual team development process involves 3D or 2D "
"artists, level designers, game designers, animators, etc all working with "
"the editor interface."
msgstr ""
"使用Godot，游戏可以如需求般快速的成长，因为只需要做更多的场景并将其实例化。"
"编辑器UI也被设计得让非程序员来使用，所以一个平常的团队开发进程会包含3D或2D美"
"工、关卡设计师、游戏设计师、动画师等都能够用这个编辑器界面工作。"

#: ../../tutorials/step_by_step/instancing_continued.rst:70
msgid "Information overload!"
msgstr "太多内容了，我记不住！（2333）"

#: ../../tutorials/step_by_step/instancing_continued.rst:72
msgid ""
"Do not worry too much, the important part of this tutorial is to create "
"awareness on how scenes and instancing are used in real life. The best way "
"to understand all this is to make some games."
msgstr ""
"别太担心，这篇教程的重要部分是去建立一种关于场景和实例化在现实生活中是如何被"
"使用的意识。做一些游戏是理解这一切的最佳方略。"

#: ../../tutorials/step_by_step/instancing_continued.rst:76
msgid ""
"Everything will become very obvious when put to practice, so, please do not "
"scratch your head and go on to the next tutorial!"
msgstr ""
"当涉足实践，一切都将变得清晰，所以，请不要抓心挠肝焦头烂额，然后继续下一篇教"
"程！"

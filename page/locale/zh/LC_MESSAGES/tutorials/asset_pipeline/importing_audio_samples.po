# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2016, Juan Linietsky, Ariel Manzur and the Godot
# community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-08-22 23:27+0800\n"
"PO-Revision-Date: 2017-05-25 20:56+0800\n"
"Language: zh\n"
"Language-Team: GoDogeCN\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"
"Last-Translator: \n"
"X-Generator: Poedit 2.0.2\n"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:4
#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:91
msgid "Importing audio samples"
msgstr "导入音频采样"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:7
msgid "Why importing?"
msgstr "为什么要导入这个东西？"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:9
msgid ""
"Importing Audio Samples into the game engine is a process that should be "
"easier than it really is. Most readers are probably thinking \"Why not "
"just copy the wav files to a folder inside the project and be over with "
"it?\""
msgstr ""
"将采样音频导入到游戏引擎中本来是比它本质更简单的事情。绝大多数读者可能会"
"想“为什么不直接复制wav波形文件到工程中的一个文件夹下然后处理它呢？”。"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:14
msgid ""
"It's not usually that simple. Most game engines use uncompressed audio "
"(in memory, at least) for sound effects. The reason for this is because "
"it's really cheap to play back and resample. Compressed streamed audio "
"(such as ogg files) takes a large amount of processor to decode so no "
"more than one or two are streamed simultaneously. However, with sound "
"effects, one expects a dozen of them to be playing at the same time in "
"several situations."
msgstr ""
"但这通常并非很简单。大多数游戏引擎使用无压缩(Uncompressed)的音频（至少是"
"到内存当中）作为音效。这样做的原因是便于回放和重采样。压缩的流式"
"(Compressed Streamed)音频(例如ogg文件)需要大量使用处理器来界面，因此不会"
"有超过一两个音频同时被流式播放。然而，对于音效来说，在某些情况下有人是需"
"要让它们当中的好几个同时播放的。"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:22
msgid ""
"Because of this, sound effects are loaded uncompressed into memory, and "
"here is where the problems begin."
msgstr "因此，音频通常是无压缩载入内存当中，而这也正是麻烦的开始。"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:25
msgid ""
"As is usual with graphics, the situation where programmers don't really "
"know about audio and audio engineers don't know about programming is "
"also common in the industry. This leads to a scenario where a project "
"ends up wasting resources unnecessarily."
msgstr ""
"在处理图形时候经常发生这样的情况，程序员实际上并不懂得音频，而音频师也并"
"不懂得变成，在行业生产当中这很常见。这就导致了一个工程最后浪费掉很多不必"
"要的资源的场面。"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:30
msgid ""
"To be more precise, SFX artists tend to work with audio formats that "
"give them a lot of room for tweaking the audio with a low noise floor "
"and minimum aliasing, such as 96kHz, 24 bits. In many cases, they work "
"in stereo too. Added to that, many times they add effects with an "
"infinite or really long fadeout, such as reverb, which leads to apparent "
"trailing silences. Finally, many DAWs also add silence at the beginning "
"when normalizing to wav."
msgstr ""
"确切的说，音效师倾向于和音频格式打交道，这给了他们很大的空间去使用一个很"
"低的噪声底和最小的混叠来调节音频，例如96kHz 24bit。在许多情况下，他们也处"
"理立体声道。算上这一点，很多时候他们会添加带有无限长或者非常长的淡出，例"
"如混响，就会导致一个很明显的末端静音。最后，在对wav波形规格化的时候许多数"
"字音频工作站(DAW)还会给音频的开始加入静音。"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:38
msgid ""
"These often result in extremely large files to integration into a game "
"engine with sound effects taking dozens of megabytes."
msgstr "这些通常会导致非常多的文件被整合到游戏引擎中来而音效占去了数十MB。"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:42
msgid "How much does quality matter?"
msgstr "音质会有什么影响呢？"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:44
msgid ""
"First of all, it is important to know that Godot has an internal reverb "
"generator. Sound effects can go to four different setups (small, medium "
"and large room, as well as hall), with different send amounts. This "
"saves SFX artists the need to add reverb to the sound effects, reducing "
"their size greatly and ensuring correct trimming. Say no to SFX with "
"baked reverb!"
msgstr ""
"首先，我们有必要知道Godot具有内部的混响发生器。音效可以进入四中不同的配置"
"（小、中、大房间和大厅），还可以传递不同的值。这些东西省去了音频师需要对"
"音频加入混响的必要性，也很大程度上减少了文件的体积并确保首末剪辑的正确"
"性。对带有烘焙混响的音效说不！"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:53
msgid ""
"Another common problem is that, while it's useful for working inside a "
"DAW, high bit depths (24 bits) and high sampling rate (96kHz) are "
"completely unnecessary for use in a game, as there is no `audible "
"difference <http://www.youtube.com/watch?v=cIQ9IXSUzuM>`__. If "
"positional sound is going to be used (for 2D and 3D), the panning and "
"stereo reverb will be provided by the engine, so there is little need "
"for stereo sound. How does this affect the resource usage? Look at the "
"following comparison:"
msgstr ""
"另一个常见的问题是，高位深（24位）高采样率（96kHz）在数字音频工作站里很有"
"用，但在游戏当中这完全没必要，因为根本没有 `可以听出来的差别<http://www."
"youtube.com/watch?v=cIQ9IXSUzuM>`__ 。如果打算使用具有方位效应（双耳效"
"应）的音频（2D或者3D）的音频，调节混响的电平衡和立体声道化将会由引擎提"
"供，对于立体声音几乎也没什么需要做的了。这些将如何影响资源使用呢？请看下"
"面的比较："

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:63
msgid "Format"
msgstr "格式"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:63
msgid "1 Second of Audio"
msgstr "1秒音频"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:63
msgid "Frame Size"
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:65
msgid "24 bits, 96 kHz, Stereo"
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:65
msgid "576kb"
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:65
msgid "12"
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:67
msgid "16 bits, 44 kHz, Mono"
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:67
msgid "88kb"
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:67
msgid "2"
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:69
msgid "16 bits, IMA-ADPCM"
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:69
msgid "22kb"
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:69
msgid "1/2"
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:72
msgid ""
"As seen, for being no audible difference, the 16 bits, 44kHz, mono "
"conversion takes *6 times less memory* than the 24 bits, 96kHz, Stereo "
"version. The IMA-ADPCM version (using computationally-light audio "
"compression) takes *24 times less memory* than what was exported from "
"the DAW."
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:78
msgid "Trimming"
msgstr "修剪"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:80
msgid ""
"One last issue that happens often is that the waveform files received "
"have silences at the beginning and at the end. These are inserted by "
"DAWs when saving to a waveform, increase their size unnecessarily and "
"add latency to the moment they are played back. Trimming them solves "
"this, but it takes effort for the SFX artist, as they have to do it in a "
"separate application. In the worst case, they may not even know the "
"silences are being added."
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:93
msgid ""
"Godot has a simple screen for importing audio samples to the engine. SFX "
"artists only have to save the wav files to a folder outside the project, "
"and the import dialog will fix the files for inclusion, as well as doing "
"it automatically every time they are modified and re-imported."
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:100
msgid ""
"In this screen, the quality of the audio can be limited to what is "
"needed, and trimming is done automatically. In addition, several samples "
"can be loaded and batch-converted, just as textures can."
msgstr ""

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:105
msgid "Looping"
msgstr "循环"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:107
msgid ""
"Godot supports looping in the samples (Tools such as Sound Forge or "
"Audition can add loop points to wav files). This is useful for sound "
"effects such as engines, machine guns, etc. Ping-pong looping is also "
"supported."
msgstr ""
"Godot支持循环播放采样音频（像Sound Forge和Audition这类工具可以为wav文件添"
"加循环点）。这对于类似于汽车引擎、机枪等物体的音效十分有用。同时，Godot还"
"支持往返循环播放(Ping-pong looping)。"

#: ../../tutorials/asset_pipeline/importing_audio_samples.rst:112
msgid ""
"As an alternative, the import screen has a \"loop\" option that enables "
"looping for the entire sample when importing."
msgstr ""
